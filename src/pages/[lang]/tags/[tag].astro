---
import { CollectionEntry, getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Main from "@layouts/Main.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Card from "@components/Card";
import getUniqueTags from "@utils/getUniqueTags";
import getPostsByTag from "@utils/getPostsByTag";
import slugify from "@utils/slugify";
import { SITE } from "@config";
import { useTranslations } from "@i18n/utils";
import { languages } from "@i18n/ui";

export interface Props {
  post: CollectionEntry<"blog">;
  tag: string;
}

export async function getStaticPaths() {
  const result = await Promise.all(
    Object.keys(languages).map(async lang => {
      const posts = await getCollection(
        "blog",
        ({ data }) => data.language === lang
      );
      const tags = getUniqueTags(posts);
      return tags.map(tag => {
        return {
          params: { lang, tag },
          props: { tag },
        };
      });
    })
  );

  return [...result];
}

const { tag } = Astro.props;

const { lang } = Astro.params as { lang: keyof typeof languages };
const t = useTranslations(lang);
const posts = await getCollection("blog", ({ data }) => data.language === lang);

const tagPosts = getPostsByTag(posts, tag);
---

<Layout title={`${t("tags.title")}:${tag} | ${SITE.title}`}>
  <Header activeNav="tags" />
  <Main
    pageTitle={`${t("tags.title")}:${tag}`}
    pageDesc={`${t("tags.results.description")} "${tag}".`}
  >
    <ul>
      {
        tagPosts.map(({ data }) => (
          <Card href={`/${lang}/posts/${slugify(data)}`} frontmatter={data} />
        ))
      }
    </ul>
  </Main>
  <Footer />
</Layout>
